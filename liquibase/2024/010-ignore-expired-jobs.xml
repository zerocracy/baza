<?xml version="1.0"?>
<!--
MIT License

Copyright (c) 2009-2025 Zerocracy

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd" logicalFilePath="010-ignore-expired-jobs.xml">
  <changeSet id="010" author="yegor256">
    <sql>
      DROP FUNCTION avoid_duplicate_jobs() CASCADE;
    </sql>
    <sql>
      CREATE FUNCTION avoid_duplicate_jobs()
      RETURNS trigger AS
      'BEGIN
        IF (SELECT job.id FROM job
          LEFT JOIN result ON result.job = job.id
          WHERE name = NEW.name
          AND job.expired IS NULL
          AND token = NEW.token
          AND result.id IS NULL) IS NOT NULL THEN
          RAISE EXCEPTION ''Another job is running'';
        END IF;
        RETURN NEW;
      END' LANGUAGE PLPGSQL;
    </sql>
    <sql>
      CREATE TRIGGER avoid_duplicates
      BEFORE INSERT ON job
      FOR EACH ROW EXECUTE PROCEDURE avoid_duplicate_jobs();
    </sql>
  </changeSet>
</databaseChangeLog>
